typedef struct Studyuser
{
	char user_ID[11];
	char group_ID[11];
	// 가입 일자
	// 최종 접속 시간
	// 또 뭐 넣지
} Studyuser;

typedef struct timelog // 공부 시간 기록을 저장하는 구조체
{	
	// Studyuser info; 
	char subject[30];
	time_t start_time; // 공부 시작 시간
	time_t tm finish_time; // 공부 종료 시간
	double studytime; // 공부 시간
} timelog;

/* struct tm {
   int tm_sec;         // 초,  range 0 to 59      
   int tm_min;         // 분, range 0 to 59             
   int tm_hour;        // 시간, range 0 to 23  
   int tm_mday;        // 일, range 1 to 31  
   int tm_mon;         // 월, range 0 to 11     
   int tm_year;        // 1900년 부터의 년                
   int tm_wday;        // 요일, range 일(0) to 토(6) 
   int tm_yday;        // 1년 중 경과 일, range 0 to 365 
   int tm_isdst;       // 섬머타임 실시 여부 (양수, 0, 음수)              
}; */

void day_stats() // 일별 통계보기
{
	오늘 공부한 파일의 이름이 "yyyymmdd.txt면"
	time_t t = time(NULL)로 현재 시간 받아와서 
	struct tm tm_today = localtime(&t); // tm_today에 오늘 정보 넣고
	
	struct tm의 필드가 다 int니까
	-> itoa로 "yyyymmdd" 만들고 strcat으로 .txt 붙이기 // 아니면 파라미터로 year, month, day 받아오는 것도 괜찮을 듯 -> 진짜 괜찮을 듯
	
	if(파일이 없네)
	{
		공부 안 했네요
	}
	
	timelog today_log[10]; // 과목별 공부 시간 저장, 과목은 10개까지 -> 제한을 안 두려면 malloc으로
	int subject_count = 0;
	while(파일 끝까지 read(struct timelog))
	{
		새로운 subject 나오면 subject_count++;
		subject 이름 찾아가서 today_log[i].studytime에 공부 시간 더하기
	}
	
	// 정상적으로 작동되었을 때 예시
	// time_log[0] = {"computer architecture", 쓰레기, 쓰레기, 공부 시간 합 3600초};
	// time_log[1] = {"system programming", 쓰레기, 쓰레기, 공부 시간 합 30초};
	
	display_daystats(timelog*); // timelog 배열을 받아서 윈도우에 이쁘게 출력해줌
	
	close(fd);
}
